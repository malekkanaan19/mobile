import 'package:flutter/material.dart';
import 'maps.dart'; // Import the MapScreen

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TruckGo',
      theme: ThemeData(
        primarySwatch: Colors.lightBlue,
        scaffoldBackgroundColor: Colors.white,
      ),
      home: LoginSignUpScreen(),
    );
  }
}

class LoginSignUpScreen extends StatefulWidget {
  @override
  _LoginSignUpScreenState createState() => _LoginSignUpScreenState();
}

class _LoginSignUpScreenState extends State<LoginSignUpScreen> {
  final _formKey = GlobalKey<FormState>();

  bool _isLogin = true;
  String _email = '';
  String _password = '';

  Set<String> registeredEmails = {};
  Map<String, String> emailPasswordPairs = {};

  bool isEmailValid(String email) {
    final regex =
        RegExp(r'^.+@(gmail\.com|outlook\.com|live\.com|hotmail\.com)$');
    return regex.hasMatch(email);
  }

  void _submit() {
    if (!_formKey.currentState!.validate()) return;

    _formKey.currentState!.save();

    if (_isLogin) {
      if (!registeredEmails.contains(_email)) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Sign up first before logging in.'),
          ),
        );
        return;
      } else if (emailPasswordPairs[_email] != _password) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Invalid email or password.'),
          ),
        );
        return;
      }

      // Handle login logic here
      print('Logging in with email: $_email, password: $_password');
      // Navigate to the MapScreen
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => MapScreen()),
      );
    } else {
      if (registeredEmails.contains(_email)) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Email is already registered. Please log in.'),
          ),
        );
        return;
      }

      // Handle signup logic here
      print('Signing up with email: $_email, password: $_password');
      registeredEmails.add(_email);
      emailPasswordPairs[_email] = _password;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Padding(
          padding: EdgeInsets.all(16),
          child: SingleChildScrollView(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                SizedBox(height: 20),
                Image.asset(
                  'assets/logo.webp',
                  // Assuming you have the logo in your assets/images folder
                  height: 100,
                  width: 100,
                ),
                SizedBox(height: 20),
                Text(
                  'TruckGo',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 40),
                Card(
                  margin: EdgeInsets.all(10),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(15),
                  ),
                  color: Colors.white.withOpacity(0.9),
                  child: Padding(
                    padding: EdgeInsets.all(16),
                    child: Form(
                      key: _formKey,
                      child: Column(
                        children: [
                          TextFormField(
                            decoration: InputDecoration(labelText: 'Email'),
                            keyboardType: TextInputType.emailAddress,
                            validator: (value) {
                              if (value == null || value.isEmpty) {
                                return 'Please enter an email';
                              } else if (!isEmailValid(value)) {
                                return 'Please enter a valid email format';
                              }
                              return null;
                            },
                            onSaved: (value) => _email = value!,
                          ),
                          SizedBox(height: 12),
                          TextFormField(
                            decoration: InputDecoration(labelText: 'Password'),
                            obscureText: true,
                            validator: (value) {
                              if (value == null ||
                                  value.isEmpty ||
                                  value.length < 6) {
                                return 'Password must be at least 6 characters long';
                              }
                              return null;
                            },
                            onSaved: (value) => _password = value!,
                          ),
                          SizedBox(height: 20),
                          ElevatedButton(
                            onPressed: _submit,
                            child: Text(_isLogin ? 'Login' : 'Sign Up'),
                          ),
                          TextButton(
                            onPressed: () {
                              setState(() {
                                _isLogin = !_isLogin;
                              });
                            },
                            child: Text(_isLogin
                                ? 'Create an account'
                                : 'Already have an account? Login'),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
